Спецификатор private

private int a4;
private void method4() { ... }
Доступ:

В классе A: доступ есть, поскольку private члены доступны только внутри самого класса.
В классе B (потомок A): доступ отсутствует, наследование происходит, но доступ отсутствует.
В классе C (потомок B, внук A): также доступа нет.
Примечания:

Поле a4 и метод method4() недоступны в классах B и C.
Хотя они наследуются, они остаются скрытыми, т.е. они есть, но не видны наследникам.
К ним можно получить доступ через геттеры/сеттеры, если они предусмотрены
Спецификатор protected

protected int a3;
protected void method3() { ... }
Доступ:

В классе A: доступ есть, поскольку protected члены доступны внутри самого класса.
В классе B: доступ есть, так как protected члены доступны в классах-наследниках.
В классе C: доступ есть, так как protected члены доступны и в более отдаленных наследниках.
Примечания:

Поле a3 и метод method3() доступны в классах B и C.
Важно: protected означает доступ внутри класса, наследников и в пределах пакета.
Это означает, что классы из того же пакета, не являющиеся наследниками, также могут получить доступ к этим членам.
Спецификатор public

public int a2;
public void method2() { ... }
Доступ:

В классе A: доступ есть, поскольку public члены доступны внутри самого класса.
В классе B: доступ есть, поскольку public члены доступны во всех классах-наследниках и в любом другом классе.
В классе C: доступ есть, как и для класса B.
Примечания:

Поле a2 и метод method2() доступны во всех классах, независимо от того, находятся ли они в одном пакете или нет.
Наследование не изменяет доступ к public членам.
Спецификатор по умолчанию (package-private)

int a1; // package-private
void method1() { ... }
Доступ:

В классе A: доступ есть, так как члены доступны внутри самого класса.
В классе B: доступ есть только если классы A и B находятся в одном пакете.
В классе C: доступ есть только если классы A, B и C находятся в одном пакете.
Примечания:

Поле a1 и метод method1() доступны только в классах из того же пакета.
Если классы B и C находятся в другом пакете, они не имеют доступа к полю a1 и методу method1().
Если классы B и C в одном пакете с классом A, то они могут использовать a1 и method1() напрямую.
